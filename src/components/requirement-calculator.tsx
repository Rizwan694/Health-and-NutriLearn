'use client';

import { useFormState, useFormStatus } from 'react-dom';
import { getPersonalizedRecommendationsAction } from '@/app/actions';

import { Button } from '@/components/ui/button';
import { Label } from '@/components/ui/label';
import { Input } from '@/components/ui/input';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import { Loader2, Sparkles } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { useEffect } from 'react';
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from '@/components/ui/table';

const initialState = {
  success: false,
  recommendations: undefined,
  error: null,
};

function SubmitButton() {
  const { pending } = useFormStatus();
  return (
    <Button type="submit" disabled={pending} className="w-full">
      {pending ? (
        <>
          <Loader2 className="mr-2 h-4 w-4 animate-spin" />
          Generating...
        </>
      ) : (
        <>
          <Sparkles className="mr-2 h-4 w-4" />
          Get Recommendations
        </>
      )}
    </Button>
  );
}

export function RequirementCalculator() {
  const { toast } = useToast();
  const [state, formAction] = useFormState(
    getPersonalizedRecommendationsAction,
    initialState
  );

  useEffect(() => {
    if (!state.success && state.error) {
      toast({
        variant: 'destructive',
        title: 'Error',
        description: state.error,
      });
    }
  }, [state, toast]);

  return (
    <div>
      <h2 className="font-headline text-3xl font-bold text-center mb-2">
        Personalized Requirement Calculator
      </h2>
      <p className="text-center text-muted-foreground mb-6">
        Fill in your details to receive AI-powered dietary recommendations.
      </p>

      <form action={formAction} className="space-y-6">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="space-y-2">
            <Label htmlFor="age">Age</Label>
            <Input
              id="age"
              name="age"
              type="number"
              placeholder="e.g., 25"
              required
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="gender">Gender</Label>
            <Select name="gender" required>
              <SelectTrigger id="gender">
                <SelectValue placeholder="Select your gender" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="male">Male</SelectItem>
                <SelectItem value="female">Female</SelectItem>
              </SelectContent>
            </Select>
          </div>

          <div className="space-y-2">
            <Label htmlFor="activityLevel">Activity Level</Label>
            <Select name="activityLevel" required>
              <SelectTrigger id="activityLevel">
                <SelectValue placeholder="Select your activity level" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="sedentary">
                  Sedentary (little to no exercise)
                </SelectItem>
                <SelectItem value="light">
                  Light (light exercise/sports 1-3 days/week)
                </SelectItem>
                <SelectItem value="moderate">
                  Moderate (moderate exercise/sports 3-5 days/week)
                </SelectItem>
                <SelectItem value="heavy">
                  Heavy (hard exercise/sports 6-7 days a week)
                </SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>
        <SubmitButton />
      </form>

      {state.success && state.recommendations && (
        <Card className="mt-8 bg-primary/5">
          <CardHeader>
            <CardTitle className="font-headline flex items-center gap-2">
              <Sparkles className="text-accent" />
              Your Personalized Recommendations
            </CardTitle>
            <CardDescription>
              Here are the dietary suggestions generated by our AI based on
              your profile.
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="prose prose-sm max-w-none text-foreground whitespace-pre-wrap mb-6">
              {state.recommendations.summary}
            </div>

            <h3 className="font-headline text-xl font-bold mb-4">Daily Dietary Chart</h3>
            <div className="overflow-hidden rounded-lg border">
                <Table>
                <TableHeader>
                    <TableRow className="bg-muted/50">
                    <TableHead className="font-bold">Food Category</TableHead>
                    <TableHead className="font-bold">Recommended Daily Intake</TableHead>
                    </TableRow>
                </TableHeader>
                <TableBody>
                    {state.recommendations.dailyChart.map((item, index) => (
                    <TableRow key={index}>
                        <TableCell>{item.category}</TableCell>
                        <TableCell>{item.recommendation}</TableCell>
                    </TableRow>
                    ))}
                </TableBody>
                </Table>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
